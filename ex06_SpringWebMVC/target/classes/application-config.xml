<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:component-scan
		base-package="com.multicampus.web" />

	<context:property-placeholder
		location="classpath:database/jdbc.properties" />

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg>
			<bean class="com.zaxxer.hikari.HikariConfig">
				<constructor-arg>
					<props>
						<prop key="jdbcUrl">${jdbc.url}</prop>
						<prop key="username">${jdbc.username}</prop>
						<prop key="password">${jdbc.password}</prop>
					</props>
				</constructor-arg>
				<property name="driverClassName" value="${jdbc.driverClassName}" />
				<property name="minimumIdle" value="5" />
				<property name="maximumPoolSize" value="10" />
				<property name="connectionTestQuery"
					value="select 1 from sys.dual" />
				<property name="connectionTimeout" value="300000" />
			</bean>
		</constructor-arg>
	</bean>

	<!-- bean> <property name= "driverClassName" value="${jdbc.driverClassName}" 
		/> <property name= "url" value="${jdbc.url}" /> <property name= "username" 
		value="${jdbc.username}" /> <property name= "password" value="${jdbc.password}" 
		/> </bean -->

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- transaction -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="txPointcut"
			expression="execution(* com.coderby.myapp..*Service.deleteEmp(..))" />
			<!-- 어떤 리턴타입이라도, 패키지 않에 service로끝나는  .. : 여러개의 아무값, * 하나의 아무거나 -->
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="txPointcut" />
	</aop:config>

	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>
